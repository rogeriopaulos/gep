# Generated by Django 2.2.19 on 2021-09-02 02:38

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cargo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cargo', models.CharField(max_length=255, verbose_name='Cargo')),
            ],
            options={
                'verbose_name': '[NORMALIZAÇÃO] Cargo',
                'verbose_name_plural': '[NORMALIZAÇÃO] Cargos',
            },
        ),
        migrations.CreateModel(
            name='Orgao',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('orgao', models.CharField(max_length=255, verbose_name='Órgão')),
                ('sigla', models.CharField(max_length=30, null=True, verbose_name='Sigla')),
                ('permissions', models.ManyToManyField(blank=True, help_text='Informe os módulos que este orgão tem permissão de acesso.', to='auth.Permission', verbose_name='permissões do orgão')),
            ],
            options={
                'verbose_name': '[NORMALIZAÇÃO] Órgão',
                'verbose_name_plural': '[NORMALIZAÇÃO] Órgãos',
                'permissions': (('access_ADMINISTRATIVO', 'Acesso ao Módulo ADMINISTRATIVO'),),
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nascimento', models.DateField(blank=True, null=True, verbose_name='Data de nascimento')),
                ('lotacao', models.CharField(max_length=50, verbose_name='Unidade de lotação atual')),
                ('funcao', models.CharField(blank=True, max_length=50, null=True, verbose_name='Função que exerce')),
                ('matricula', models.CharField(max_length=15, verbose_name='Matrícula')),
                ('cpf', models.CharField(blank=True, max_length=14, null=True, validators=[django.core.validators.RegexValidator(code='CPF inválido', message='O CPF informado deve ser no padrão "000.111.222-33".', regex='(^\\d{3}\\x2E\\d{3}\\x2E\\d{3}\\x2D\\d{2}$)')], verbose_name='CPF')),
                ('identidade', models.CharField(blank=True, max_length=20, null=True, verbose_name='Identidade')),
                ('org_identidade', models.CharField(blank=True, max_length=10, null=True, verbose_name='Órgão Expedidor')),
                ('cel_funcional', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(code='Número inválido', message='O telefone informado deve ser no padrão                 (DDD) NNNNN-NNNN.', regex='^\\([1-9]{2}\\) (?:[2-8]|9[1-9])[0-9]{3}\\-[0-9]{4}$')], verbose_name='Celular funcional')),
                ('cel_pessoal', models.CharField(blank=True, max_length=15, validators=[django.core.validators.RegexValidator(code='Número inválido', message='O telefone informado deve ser no padrão                 (DDD) NNNNN-NNNN.', regex='^\\([1-9]{2}\\) (?:[2-8]|9[1-9])[0-9]{3}\\-[0-9]{4}$')], verbose_name='Celular pessoal')),
                ('endereco', models.CharField(blank=True, max_length=200, null=True, verbose_name='Endereço')),
                ('cep', models.CharField(blank=True, max_length=9, null=True, validators=[django.core.validators.RegexValidator(code='CEP inválido', message='O CEP informado deve ser no padrão "00000-000".', regex='^\\d{5}-\\d{3}$')], verbose_name='CEP')),
                ('alterar_senha', models.BooleanField(default=False, verbose_name='Forçar alteração de senha')),
                ('subscritor', models.BooleanField(default=False, verbose_name='Pode subscrever documentos?')),
                ('cargo_link', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='account.Cargo', verbose_name='Cargo')),
                ('orgao_link', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='account.Orgao', verbose_name='Instituição a qual está vinculado')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Usuário GEP',
                'verbose_name_plural': 'Usuários GEP',
            },
        ),
        migrations.AddField(
            model_name='cargo',
            name='orgao',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cargos', to='account.Orgao'),
        ),
    ]
